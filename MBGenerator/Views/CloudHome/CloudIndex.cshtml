@using MBGenerator.ViewModels;

@{
    ViewData["Title"] = "Cloud Home Page";
}
@model MBGenerator.ViewModels.MBViewModel;

<style>
    .flex-container {
        display: flex;
        flex-direction: row;
    }
</style>

<script>
    function imageclick(x, y) {
        var min_x = parseFloat(document.getElementById("min_x").value);
        var max_x = parseFloat(document.getElementById("max_x").value);
        var min_y = parseFloat(document.getElementById("min_y").value);
        var max_y = parseFloat(document.getElementById("max_y").value);
        var depth = parseInt(document.getElementById("depth").value);
        var step_x = (max_x - min_x) / 10;
        var step_y = (max_y - min_y) / 10;
        var new_min_x = min_x + (x * step_x);
        var new_max_x = new_min_x + step_x;
        var new_min_y = min_y + (y * step_y);
        var new_max_y = new_min_y + step_y;
        depth = depth + 1;
        document.getElementById("min_x").value = new_min_x;
        document.getElementById("max_x").value = new_max_x;
        document.getElementById("min_y").value = new_min_y;
        document.getElementById("max_y").value = new_max_y;
        document.getElementById("depth").value = depth;

        connection.invoke("CalcMB", x, y, new_min_x, new_max_x, new_min_y, new_max_y, depth).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();



    }
</script>

<div class="main-container">
    <div class="content">
        <div class="content-body">

            <input type="hidden" id="min_x" value="@Model.Min_x" />
            <input type="hidden" id="max_x" value="@Model.Max_x" />
            <input type="hidden" id="min_y" value="@Model.Min_y" />
            <input type="hidden" id="max_y" value="@Model.Max_y" />
            <input type="hidden" id="depth" value="@Model.Depth" />

        </div>
    </div>
</div>

<div>
    <div>


        @{ // do some razor stuff to build up an array of images with on click action to zoom into the mandelbrot set.
            double min_x = Model.Min_x;
            double max_x = Model.Max_x;
            double min_y = Model.Min_y;
            double max_y = Model.Max_y;

            double x_step_size = (max_x - min_x) / 10;
            double y_step_size = (max_y - min_y) / 10;

            double image_x = min_x;
            double image_y = min_y;
            double image_x1 = 0;
            double image_y1 = 0;
            for (var y = 0; y < 10; y++)
            {
                var ImageRow = "";
                image_y1 = image_y + y_step_size;

                image_x = min_x;

                <div class="flex-container">
                    @for (var x = 0; x < 10; x++)
                    {
                        image_x1 = image_x + x_step_size;

                        ImageRow = "<img id=\"image:" + x + "," + y + "\" src=\"/MBStartImages/Image" + x + "-" + y + ".jpg\" onclick=imageclick(" + x + "," + y + ")>";
                        //ImageRow = "<img id=\"image:" + x + "," + y + "\" src=\"/MBStartImages/Image" + x + "-" + y + ".jpg\" onclick=uff(1,2) />";

                        @Html.Raw(ImageRow)


                        image_x = image_x1;
                    }
                </div>
                image_y = image_y1;
            }
        }
    </div>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/CloudIndexSignalRConnector.js"></script>


